[{"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\index.js":"1","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\App.js":"2","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\robotCommandGenerator.js":"3","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\customBlocks.js":"4","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\interpreter\\useCommandQueue.js":"5","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\state\\agentContext.js":"6","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\Scene.js":"7","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\useAgent.js":"8","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\interpreter\\executeCommand.js":"9","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\Map.js":"10","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\state\\levelContext.js":"11","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\index.js":"12","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\App.js":"13","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\blockly\\robotCommandGenerator.js":"14","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\blockly\\customBlocks.js":"15","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\interpreter\\executeCommand.js":"16","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\three\\Scene.js":"17","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\state\\levelContext.js":"18","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\interpreter\\useCommandQueue.js":"19","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\three\\useAgent.js":"20","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\state\\agentContext.js":"21","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\three\\Map.js":"22","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\db\\db.js":"23","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\db\\level1.js":"24","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\state\\userContext.js":"25","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\three\\Camera.js":"26"},{"size":219,"mtime":1760352187013,"results":"27","hashOfConfig":"28"},{"size":2795,"mtime":1760596956569,"results":"29","hashOfConfig":"28"},{"size":2672,"mtime":1760528295053,"results":"30","hashOfConfig":"28"},{"size":4352,"mtime":1760529817793,"results":"31","hashOfConfig":"28"},{"size":2658,"mtime":1760596956569,"results":"32","hashOfConfig":"28"},{"size":321,"mtime":1760516163636,"results":"33","hashOfConfig":"28"},{"size":10892,"mtime":1760596235014,"results":"34","hashOfConfig":"28"},{"size":6027,"mtime":1760595116882,"results":"35","hashOfConfig":"28"},{"size":2626,"mtime":1760595116882,"results":"36","hashOfConfig":"28"},{"size":2484,"mtime":1760596235014,"results":"37","hashOfConfig":"28"},{"size":3408,"mtime":1760595879696,"results":"38","hashOfConfig":"28"},{"size":219,"mtime":1760672285226,"results":"39","hashOfConfig":"40"},{"size":2953,"mtime":1760692787291,"results":"41","hashOfConfig":"40"},{"size":2672,"mtime":1760673826148,"results":"42","hashOfConfig":"40"},{"size":4352,"mtime":1760673826148,"results":"43","hashOfConfig":"40"},{"size":2626,"mtime":1760673826148,"results":"44","hashOfConfig":"40"},{"size":8175,"mtime":1760952258267,"results":"45","hashOfConfig":"40"},{"size":5991,"mtime":1760937289389,"results":"46","hashOfConfig":"40"},{"size":2658,"mtime":1760673826148,"results":"47","hashOfConfig":"40"},{"size":6288,"mtime":1760952257535,"results":"48","hashOfConfig":"40"},{"size":321,"mtime":1760673826148,"results":"49","hashOfConfig":"40"},{"size":2462,"mtime":1760675084033,"results":"50","hashOfConfig":"40"},{"size":8958,"mtime":1760937288331,"results":"51","hashOfConfig":"40"},{"size":606,"mtime":1760696962533,"results":"52","hashOfConfig":"40"},{"size":2439,"mtime":1760678440964,"results":"53","hashOfConfig":"40"},{"size":8316,"mtime":1760943996941,"results":"54","hashOfConfig":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"125b5e2",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"6r85av",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"81"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\index.js",[],["113","114"],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\App.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\robotCommandGenerator.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\customBlocks.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\interpreter\\useCommandQueue.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\state\\agentContext.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\Scene.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\useAgent.js",["115"],"import { useState, useRef, useCallback } from 'react'\nimport { useLevel } from '../state/levelContext'\n\nconst DIRECTIONS = [\n    { dx: 0, dy: 1 },   // 0 - вверх\n    { dx: 1, dy: 0 },   // 1 - вправо\n    { dx: 0, dy: -1 },  // 2 - вниз\n    { dx: -1, dy: 0 },  // 3 - влево\n]\n\nconst DIRECTION_COUNT = DIRECTIONS.length\n\nexport function useAgent({\n    mapWidth,\n    mapHeight,\n    agentRadius = 0.5,\n    steps = 20,\n    duration = 300\n} = {}) {\n    const { grid, canEnterLogical, isAdjacentToPickup, isAdjacentToDropoff } = useLevel();\n    const [agentState, setAgentState] = useState(() => ({\n        // Логические координаты: целочисленные индексы клеток сетки (i, j)\n        // По умолчанию стартуем в левом нижнем углу карты\n        x: 0,\n        y: mapHeight - 1,\n        direction: 1,\n        scaleY: 1\n    }))\n    const [hasCargo, setHasCargo] = useState(false)\n    const agentStateRef = useRef(agentState)\n    agentStateRef.current = agentState\n\n    const animateMove = useCallback(async (to) => {\n        const from = { ...agentStateRef.current }\n        let dDir = ((to.direction - from.direction + DIRECTION_COUNT) % DIRECTION_COUNT)\n        if (dDir > 2) dDir -= DIRECTION_COUNT\n        const dx = to.x - from.x\n        const dy = to.y - from.y\n        for (let step = 1; step <= steps; ++step) {\n            await new Promise(res => setTimeout(res, duration / steps))\n            const t = step / steps\n            const x = from.x + dx * t\n            const y = from.y + dy * t\n            let newDir = (from.direction + dDir * t + DIRECTION_COUNT) % DIRECTION_COUNT\n            setAgentState({ x, y, direction: t < 1 ? newDir : to.direction, scaleY: 1 })\n        }\n        setAgentState({ ...to, scaleY: to.scaleY ?? 1 })\n    }, [steps, duration])\n\n    const animateSquash = useCallback(async ({ minScaleY = 0.6 } = {}) => {\n        const from = { ...agentStateRef.current }\n        const frames = Math.max(4, Math.floor(steps / 2))\n        const half = Math.floor(frames / 2)\n        // Сжать\n        for (let i = 1; i <= half; i++) {\n            await new Promise(res => setTimeout(res, (duration) / frames))\n            const t = i / half\n            const scaleY = 1 - (1 - minScaleY) * t\n            setAgentState({ ...from, scaleY })\n        }\n        // Вернуть\n        for (let i = 1; i <= frames - half; i++) {\n            await new Promise(res => setTimeout(res, (duration) / frames))\n            const t = i / (frames - half)\n            const scaleY = minScaleY + (1 - minScaleY) * t\n            setAgentState({ ...from, scaleY })\n        }\n        setAgentState({ ...from, scaleY: 1 })\n    }, [steps, duration])\n\n    const moveForward = useCallback(async (numSteps = 1) => {\n        const totalSteps = Math.max(1, Number.isFinite(numSteps) ? Math.floor(numSteps) : 1)\n        for (let i = 0; i < totalSteps; i++) {\n            const { x, y, direction } = agentStateRef.current\n            const { dx, dy } = DIRECTIONS[direction]\n            const newX = x + dx\n            const newY = y + dy\n            if (!canEnterLogical(newX, newY)) break\n            await animateMove({ x: newX, y: newY, direction })\n            const stepPauseMs = Math.max(50, Math.floor(duration / 3))\n            await new Promise(res => setTimeout(res, stepPauseMs))\n        }\n    }, [animateMove, duration, canEnterLogical])\n\n    const pickUp = useCallback(async () => {\n        if (hasCargo) return;\n        const { x, y } = agentStateRef.current\n        // Агент может анимироваться и иметь нецелые координаты — округлим до ближайшей клетки\n        const i = Math.round(x)\n        const j = Math.round(y)\n        const nearPickup = isAdjacentToPickup(i, j)\n        if (nearPickup) {\n            await animateSquash({ minScaleY: 0.55 })\n            setHasCargo(true)\n        }\n    }, [hasCargo, animateSquash, isAdjacentToPickup])\n\n    const dropOff = useCallback(async () => {\n        if (!hasCargo) return;\n        const { x, y } = agentStateRef.current\n        const i = Math.round(x)\n        const j = Math.round(y)\n        const nearDrop = isAdjacentToDropoff(i, j)\n        if (nearDrop) {\n            await animateSquash({ minScaleY: 0.55 })\n            setHasCargo(false)\n            alert(\"🎉 Поздравляем! Уровень пройден! 🎉\")\n        }\n    }, [hasCargo, animateSquash, isAdjacentToDropoff])\n\n    const moveBackward = useCallback(async (numSteps = 1) => {\n        const totalSteps = Math.max(1, Number.isFinite(numSteps) ? Math.floor(numSteps) : 1)\n        for (let i = 0; i < totalSteps; i++) {\n            const { x, y, direction } = agentStateRef.current\n            const { dx, dy } = DIRECTIONS[direction]\n            const newX = x - dx\n            const newY = y - dy\n            if (!canEnterLogical(newX, newY)) break\n            await animateMove({ x: newX, y: newY, direction })\n            const stepPauseMs = Math.max(50, Math.floor(duration / 3))\n            await new Promise(res => setTimeout(res, stepPauseMs))\n        }\n    }, [animateMove, duration, canEnterLogical])\n\n    const turnLeft = useCallback(async () => {\n        const { x, y, direction } = agentStateRef.current\n        const newDir = (direction + DIRECTION_COUNT - 1) % DIRECTION_COUNT\n        await animateMove({ x, y, direction: newDir })\n    }, [animateMove])\n\n    const turnRight = useCallback(async () => {\n        const { x, y, direction } = agentStateRef.current\n        const newDir = (direction + 1) % DIRECTION_COUNT\n        await animateMove({ x, y, direction: newDir })\n    }, [animateMove])\n\n    const getPos = useCallback(() => agentStateRef.current, [])\n\n    return {\n        agentState,\n        agentControls: {\n            moveForward,\n            moveBackward,\n            turnLeft,\n            turnRight,\n            pickUp,\n            dropOff,\n            getPos,\n        }\n    }\n}\n","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\interpreter\\executeCommand.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\Map.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\state\\levelContext.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\index.js",[],["116","117"],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\App.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\blockly\\robotCommandGenerator.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\blockly\\customBlocks.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\interpreter\\executeCommand.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\three\\Scene.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\state\\levelContext.js",["118","119","120"],"import React from \"react\";\nimport * as THREE from \"three\";\nimport { getLevelState, saveLevelState, deleteLevelState } from \"../db/db\";\n\nexport const GRID_W = 8;\nexport const GRID_H = 8;\n\nconst CELL_SIZE = 1.0;\nconst HALF = CELL_SIZE / 2;\n\nexport const CELL = {\n  EMPTY: \"empty\",\n  WALL: \"wall\",\n  PICKUP: \"pickup\",\n  DROPOFF: \"dropoff\",\n};\n\nexport function makeInitialGrid() {\n  const g = Array.from({ length: GRID_H }, () =>\n    Array.from({ length: GRID_W }, () => ({ type: CELL.EMPTY }))\n  );\n  g[2][3] = { type: CELL.WALL, meta: { height: 1.2 } };\n  g[1][1] = { type: CELL.PICKUP, meta: { id: \"P1\" } };\n  g[6][6] = { type: CELL.DROPOFF, meta: { id: \"D1\" } };\n  g[7][2] = { type: CELL.WALL };\n  g[0][4] = { type: CELL.WALL };\n  g[3][7] = { type: CELL.WALL };\n  return g;\n}\n\nfunction isEmptyXml(xmlConfig) {\n  const trimmedXml = xmlConfig.trim();\n  \n  // Проверяем через regexp, что XML содержит только теги <xml></xml> без вложенных блоков\n  // Разрешаем параметры в тегах, но не вложенные блоки\n  const emptyXmlRegex = /^<xml[^>]*><\\/xml>$/;\n  \n  return trimmedXml === '' || emptyXmlRegex.test(trimmedXml);\n}\n\nconst LevelContext = React.createContext(null);\n\nexport function LevelProvider({ children, levelId = 1 }) {\n  const [grid, setGrid] = React.useState(makeInitialGrid);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [xmlAlgorithmConfig, setXmlAlgorithmConfig] = React.useState('<xml></xml>');\n\n  // Загрузка данных уровня из базы данных при инициализации\n  React.useEffect(() => {\n    const loadLevelData = async () => {\n      try {\n        setIsLoading(true);\n        const levelData = await getLevelState(levelId);\n        if (levelData) {\n          if (levelData.gridJson) {\n            setGrid(levelData.gridJson);\n          }\n          localStorage.getItem(`SavedAlgorithm/Level-${levelId}`);\n          setXmlAlgorithmConfig(xmlAlgorithmConfig);\n        }\n      } catch (error) {\n        console.error(\"Ошибка при загрузке данных уровня:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadLevelData();\n  }, [levelId]);\n\n  // Утилиты, которые используют значения из контекста\n  const contextUtils = {\n    // Упрощенная версия gridToWorld\n    gridToWorld: (x, y) => new THREE.Vector3(\n      x * CELL_SIZE + HALF,\n      0,\n      (GRID_H - 1 - y) * CELL_SIZE + HALF\n    ),\n    \n    // Упрощенная версия getCellType\n    getCellType: (i, j) => {\n      if (i < 0 || i >= GRID_W || j < 0 || j >= GRID_H) return null;\n      return grid[j][i]?.type ?? null;\n    },\n    \n    // Упрощенная версия isAdjacentToCellType\n    isAdjacentToCellType: (i, j, type) => {\n      const neighbors = [\n        { i: i + 1, j },\n        { i: i - 1, j },\n        { i, j: j + 1 },\n        { i, j: j - 1 }\n      ];\n      for (const { i: ni, j: nj } of neighbors) {\n        if (ni < 0 || ni >= GRID_W || nj < 0 || nj >= GRID_H) continue;\n        const cellType = grid[nj][ni]?.type ?? null;\n        if (cellType === type) return true;\n      }\n      return false;\n    },\n    \n    // Упрощенные версии isAdjacentToPickup и isAdjacentToDropoff\n    isAdjacentToPickup: (i, j) => contextUtils.isAdjacentToCellType(i, j, CELL.PICKUP),\n    isAdjacentToDropoff: (i, j) => contextUtils.isAdjacentToCellType(i, j, CELL.DROPOFF),\n    \n    // Упрощенная версия canEnterWorld\n    canEnterWorld: (x, y) => {\n      const i = Math.round(x + GRID_W / 2 - 0.5);\n      const zCell = Math.round(y + GRID_H / 2 - 0.5);\n      const j = GRID_H - 1 - zCell;\n      if (i < 0 || i >= GRID_W || j < 0 || j >= GRID_H) return false;\n      const cell = grid[j][i];\n      return cell.type !== CELL.WALL;\n    },\n    \n    // Упрощенная версия canEnterLogical\n    canEnterLogical: (i, j) => {\n      if (i < 0 || i >= GRID_W || j < 0 || j >= GRID_H) return false;\n      const cell = grid[j][i];\n      return cell.type !== CELL.WALL;\n    },\n    \n    // Упрощенная версия isWallAt\n    isWallAt: (i, j) => {\n      if (i < 0 || i >= GRID_W || j < 0 || j >= GRID_H) return false;\n      const cellType = grid[j][i]?.type ?? null;\n      return cellType === CELL.WALL;\n    },\n\n    // Сброс уровня к начальному состоянию\n    resetLevel: async () => {\n      try {\n        await deleteLevelState(levelId);\n        setGrid(makeInitialGrid());\n        setXmlAlgorithmConfig('<xml></xml>');\n        return true;\n      } catch (error) {\n        console.error(\"Ошибка при сбросе уровня:\", error);\n        return false;\n      }\n    },\n\n    initAlgorithmConfig: () => {\n      let levelId = localStorage.getItem(`CurrentLevel`);\n      if (!levelId) {\n        levelId = 1\n        localStorage.setItem(`CurrentLevel`, 1);\n      }\n      \n      let xmlConfig = localStorage.getItem(`SavedAlgorithm/Level-${levelId}`);\n      if (!xmlConfig) {\n        localStorage.setItem(`SavedAlgorithm/Level-${levelId}`, '<xml></xml>');\n        xmlConfig = '<xml></xml>';\n      }\n      \n      return xmlConfig;\n    },\n\n    updateAlgorithmConfig: (xmlConfig) => {\n      let levelId = localStorage.getItem(`CurrentLevel`);\n      if (!levelId) {\n        return;\n      }\n      \n      localStorage.setItem(`SavedAlgorithm/Level-${levelId}`, xmlConfig);\n    }\n  };\n\n  const levelUtils = {\n    ...contextUtils,\n    CELL,\n    CELL_SIZE,\n    HALF\n  };\n\n  return (\n    <LevelContext.Provider value={{ \n      grid, \n      setGrid, \n      xmlAlgorithmConfig,\n      isLoading,\n      levelId,\n      ...levelUtils \n    }}>\n      {children}\n    </LevelContext.Provider>\n  );\n}\n\nexport function useLevel() {\n  const context = React.useContext(LevelContext);\n  if (!context) {\n    throw new Error(\"useLevel must be used within LevelProvider\");\n  }\n  return context;\n}\n","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\interpreter\\useCommandQueue.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\three\\useAgent.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\state\\agentContext.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\three\\Map.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\db\\db.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\db\\level1.js",[],["121","122"],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\state\\userContext.js",[],["123","124"],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\three\\Camera.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":20,"column":13,"nodeType":"131","messageId":"132","endLine":20,"endColumn":17},{"ruleId":"125","replacedBy":"133"},{"ruleId":"127","replacedBy":"134"},{"ruleId":"129","severity":1,"message":"135","line":3,"column":25,"nodeType":"131","messageId":"132","endLine":3,"endColumn":39},{"ruleId":"129","severity":1,"message":"136","line":31,"column":10,"nodeType":"131","messageId":"132","endLine":31,"endColumn":20},{"ruleId":"137","severity":1,"message":"138","line":69,"column":6,"nodeType":"139","endLine":69,"endColumn":15,"suggestions":"140"},{"ruleId":"125","replacedBy":"141"},{"ruleId":"127","replacedBy":"142"},{"ruleId":"125","replacedBy":"143"},{"ruleId":"127","replacedBy":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'grid' is assigned a value but never used.","Identifier","unusedVar",["145"],["146"],"'saveLevelState' is defined but never used.","'isEmptyXml' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'xmlAlgorithmConfig'. Either include it or remove the dependency array. You can also do a functional update 'setXmlAlgorithmConfig(x => ...)' if you only need 'xmlAlgorithmConfig' in the 'setXmlAlgorithmConfig' call.","ArrayExpression",["147"],["145"],["146"],["145"],["146"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},"Update the dependencies array to be: [levelId, xmlAlgorithmConfig]",{"range":"150","text":"151"},[2073,2082],"[levelId, xmlAlgorithmConfig]"]