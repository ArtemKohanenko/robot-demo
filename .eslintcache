[{"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\index.js":"1","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\App.js":"2","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\robotCommandGenerator.js":"3","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\customBlocks.js":"4","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\interpreter\\useCommandQueue.js":"5","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\state\\agentContext.js":"6","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\Scene.js":"7","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\useAgent.js":"8","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\interpreter\\executeCommand.js":"9","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\Map.js":"10","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\state\\levelContext.js":"11","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\index.js":"12","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\App.js":"13","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\blockly\\robotCommandGenerator.js":"14","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\blockly\\customBlocks.js":"15","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\interpreter\\executeCommand.js":"16","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\three\\Scene.js":"17","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\state\\levelContext.js":"18","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\interpreter\\useCommandQueue.js":"19","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\three\\useAgent.js":"20","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\state\\agentContext.js":"21","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\three\\Map.js":"22","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\db\\db.js":"23","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\db\\level1.js":"24","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\state\\userContext.js":"25"},{"size":219,"mtime":1760352187013,"results":"26","hashOfConfig":"27"},{"size":2795,"mtime":1760596956569,"results":"28","hashOfConfig":"27"},{"size":2672,"mtime":1760528295053,"results":"29","hashOfConfig":"27"},{"size":4352,"mtime":1760529817793,"results":"30","hashOfConfig":"27"},{"size":2658,"mtime":1760596956569,"results":"31","hashOfConfig":"27"},{"size":321,"mtime":1760516163636,"results":"32","hashOfConfig":"27"},{"size":10892,"mtime":1760596235014,"results":"33","hashOfConfig":"27"},{"size":6027,"mtime":1760595116882,"results":"34","hashOfConfig":"27"},{"size":2626,"mtime":1760595116882,"results":"35","hashOfConfig":"27"},{"size":2484,"mtime":1760596235014,"results":"36","hashOfConfig":"27"},{"size":3408,"mtime":1760595879696,"results":"37","hashOfConfig":"27"},{"size":219,"mtime":1760672285226,"results":"38","hashOfConfig":"39"},{"size":2953,"mtime":1760692787291,"results":"40","hashOfConfig":"39"},{"size":2672,"mtime":1760673826148,"results":"41","hashOfConfig":"39"},{"size":4352,"mtime":1760673826148,"results":"42","hashOfConfig":"39"},{"size":2626,"mtime":1760673826148,"results":"43","hashOfConfig":"39"},{"size":10827,"mtime":1760676000985,"results":"44","hashOfConfig":"39"},{"size":6451,"mtime":1760937114252,"results":"45","hashOfConfig":"39"},{"size":2658,"mtime":1760673826148,"results":"46","hashOfConfig":"39"},{"size":6027,"mtime":1760673826156,"results":"47","hashOfConfig":"39"},{"size":321,"mtime":1760673826148,"results":"48","hashOfConfig":"39"},{"size":2462,"mtime":1760675084033,"results":"49","hashOfConfig":"39"},{"size":8958,"mtime":1760690226400,"results":"50","hashOfConfig":"39"},{"size":606,"mtime":1760696962533,"results":"51","hashOfConfig":"39"},{"size":2439,"mtime":1760678440964,"results":"52","hashOfConfig":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"125b5e2",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"6r85av",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\index.js",[],["107","108"],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\App.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\robotCommandGenerator.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\customBlocks.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\interpreter\\useCommandQueue.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\state\\agentContext.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\Scene.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\useAgent.js",["109"],"import { useState, useRef, useCallback } from 'react'\nimport { useLevel } from '../state/levelContext'\n\nconst DIRECTIONS = [\n    { dx: 0, dy: 1 },   // 0 - вверх\n    { dx: 1, dy: 0 },   // 1 - вправо\n    { dx: 0, dy: -1 },  // 2 - вниз\n    { dx: -1, dy: 0 },  // 3 - влево\n]\n\nconst DIRECTION_COUNT = DIRECTIONS.length\n\nexport function useAgent({\n    mapWidth,\n    mapHeight,\n    agentRadius = 0.5,\n    steps = 20,\n    duration = 300\n} = {}) {\n    const { grid, canEnterLogical, isAdjacentToPickup, isAdjacentToDropoff } = useLevel();\n    const [agentState, setAgentState] = useState(() => ({\n        // Логические координаты: целочисленные индексы клеток сетки (i, j)\n        // По умолчанию стартуем в левом нижнем углу карты\n        x: 0,\n        y: mapHeight - 1,\n        direction: 1,\n        scaleY: 1\n    }))\n    const [hasCargo, setHasCargo] = useState(false)\n    const agentStateRef = useRef(agentState)\n    agentStateRef.current = agentState\n\n    const animateMove = useCallback(async (to) => {\n        const from = { ...agentStateRef.current }\n        let dDir = ((to.direction - from.direction + DIRECTION_COUNT) % DIRECTION_COUNT)\n        if (dDir > 2) dDir -= DIRECTION_COUNT\n        const dx = to.x - from.x\n        const dy = to.y - from.y\n        for (let step = 1; step <= steps; ++step) {\n            await new Promise(res => setTimeout(res, duration / steps))\n            const t = step / steps\n            const x = from.x + dx * t\n            const y = from.y + dy * t\n            let newDir = (from.direction + dDir * t + DIRECTION_COUNT) % DIRECTION_COUNT\n            setAgentState({ x, y, direction: t < 1 ? newDir : to.direction, scaleY: 1 })\n        }\n        setAgentState({ ...to, scaleY: to.scaleY ?? 1 })\n    }, [steps, duration])\n\n    const animateSquash = useCallback(async ({ minScaleY = 0.6 } = {}) => {\n        const from = { ...agentStateRef.current }\n        const frames = Math.max(4, Math.floor(steps / 2))\n        const half = Math.floor(frames / 2)\n        // Сжать\n        for (let i = 1; i <= half; i++) {\n            await new Promise(res => setTimeout(res, (duration) / frames))\n            const t = i / half\n            const scaleY = 1 - (1 - minScaleY) * t\n            setAgentState({ ...from, scaleY })\n        }\n        // Вернуть\n        for (let i = 1; i <= frames - half; i++) {\n            await new Promise(res => setTimeout(res, (duration) / frames))\n            const t = i / (frames - half)\n            const scaleY = minScaleY + (1 - minScaleY) * t\n            setAgentState({ ...from, scaleY })\n        }\n        setAgentState({ ...from, scaleY: 1 })\n    }, [steps, duration])\n\n    const moveForward = useCallback(async (numSteps = 1) => {\n        const totalSteps = Math.max(1, Number.isFinite(numSteps) ? Math.floor(numSteps) : 1)\n        for (let i = 0; i < totalSteps; i++) {\n            const { x, y, direction } = agentStateRef.current\n            const { dx, dy } = DIRECTIONS[direction]\n            const newX = x + dx\n            const newY = y + dy\n            if (!canEnterLogical(newX, newY)) break\n            await animateMove({ x: newX, y: newY, direction })\n            const stepPauseMs = Math.max(50, Math.floor(duration / 3))\n            await new Promise(res => setTimeout(res, stepPauseMs))\n        }\n    }, [animateMove, duration, canEnterLogical])\n\n    const pickUp = useCallback(async () => {\n        if (hasCargo) return;\n        const { x, y } = agentStateRef.current\n        // Агент может анимироваться и иметь нецелые координаты — округлим до ближайшей клетки\n        const i = Math.round(x)\n        const j = Math.round(y)\n        const nearPickup = isAdjacentToPickup(i, j)\n        if (nearPickup) {\n            await animateSquash({ minScaleY: 0.55 })\n            setHasCargo(true)\n        }\n    }, [hasCargo, animateSquash, isAdjacentToPickup])\n\n    const dropOff = useCallback(async () => {\n        if (!hasCargo) return;\n        const { x, y } = agentStateRef.current\n        const i = Math.round(x)\n        const j = Math.round(y)\n        const nearDrop = isAdjacentToDropoff(i, j)\n        if (nearDrop) {\n            await animateSquash({ minScaleY: 0.55 })\n            setHasCargo(false)\n            alert(\"🎉 Поздравляем! Уровень пройден! 🎉\")\n        }\n    }, [hasCargo, animateSquash, isAdjacentToDropoff])\n\n    const moveBackward = useCallback(async (numSteps = 1) => {\n        const totalSteps = Math.max(1, Number.isFinite(numSteps) ? Math.floor(numSteps) : 1)\n        for (let i = 0; i < totalSteps; i++) {\n            const { x, y, direction } = agentStateRef.current\n            const { dx, dy } = DIRECTIONS[direction]\n            const newX = x - dx\n            const newY = y - dy\n            if (!canEnterLogical(newX, newY)) break\n            await animateMove({ x: newX, y: newY, direction })\n            const stepPauseMs = Math.max(50, Math.floor(duration / 3))\n            await new Promise(res => setTimeout(res, stepPauseMs))\n        }\n    }, [animateMove, duration, canEnterLogical])\n\n    const turnLeft = useCallback(async () => {\n        const { x, y, direction } = agentStateRef.current\n        const newDir = (direction + DIRECTION_COUNT - 1) % DIRECTION_COUNT\n        await animateMove({ x, y, direction: newDir })\n    }, [animateMove])\n\n    const turnRight = useCallback(async () => {\n        const { x, y, direction } = agentStateRef.current\n        const newDir = (direction + 1) % DIRECTION_COUNT\n        await animateMove({ x, y, direction: newDir })\n    }, [animateMove])\n\n    const getPos = useCallback(() => agentStateRef.current, [])\n\n    return {\n        agentState,\n        agentControls: {\n            moveForward,\n            moveBackward,\n            turnLeft,\n            turnRight,\n            pickUp,\n            dropOff,\n            getPos,\n        }\n    }\n}\n","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\interpreter\\executeCommand.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\Map.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\state\\levelContext.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\index.js",[],["110","111"],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\App.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\blockly\\robotCommandGenerator.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\blockly\\customBlocks.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\interpreter\\executeCommand.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\three\\Scene.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\state\\levelContext.js",["112","113","114"],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\interpreter\\useCommandQueue.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\three\\useAgent.js",["115"],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\state\\agentContext.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\three\\Map.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\db\\db.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\db\\level1.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\yandex-uchebnik-robots-web\\src\\state\\userContext.js",[],["116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":20,"column":13,"nodeType":"124","messageId":"125","endLine":20,"endColumn":17},{"ruleId":"118","replacedBy":"126"},{"ruleId":"120","replacedBy":"127"},{"ruleId":"122","severity":1,"message":"128","line":3,"column":25,"nodeType":"124","messageId":"125","endLine":3,"endColumn":39},{"ruleId":"122","severity":1,"message":"129","line":31,"column":10,"nodeType":"124","messageId":"125","endLine":31,"endColumn":20},{"ruleId":"130","severity":1,"message":"131","line":75,"column":6,"nodeType":"132","endLine":75,"endColumn":15,"suggestions":"133"},{"ruleId":"122","severity":1,"message":"123","line":20,"column":13,"nodeType":"124","messageId":"125","endLine":20,"endColumn":17},{"ruleId":"118","replacedBy":"134"},{"ruleId":"120","replacedBy":"135"},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'grid' is assigned a value but never used.","Identifier","unusedVar",["136"],["137"],"'saveLevelState' is defined but never used.","'isEmptyXml' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'xmlAlgorithmConfig'. Either include it or remove the dependency array. You can also do a functional update 'setXmlAlgorithmConfig(x => ...)' if you only need 'xmlAlgorithmConfig' in the 'setXmlAlgorithmConfig' call.","ArrayExpression",["138"],["136"],["137"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [levelId, xmlAlgorithmConfig]",{"range":"141","text":"142"},[2379,2388],"[levelId, xmlAlgorithmConfig]"]