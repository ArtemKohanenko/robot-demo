[{"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\index.js":"1","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\App.js":"2","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\robotCommandGenerator.js":"3","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\customBlocks.js":"4","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\interpreter\\useCommandQueue.js":"5","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\state\\agentContext.js":"6","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\Scene.js":"7","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\useAgent.js":"8","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\interpreter\\executeCommand.js":"9","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\Map.js":"10"},{"size":219,"mtime":1760352187013,"results":"11","hashOfConfig":"12"},{"size":2286,"mtime":1760361723669,"results":"13","hashOfConfig":"12"},{"size":1885,"mtime":1760360337320,"results":"14","hashOfConfig":"12"},{"size":3745,"mtime":1760352187010,"results":"15","hashOfConfig":"12"},{"size":2427,"mtime":1760361042177,"results":"16","hashOfConfig":"12"},{"size":285,"mtime":1760352187006,"results":"17","hashOfConfig":"12"},{"size":1549,"mtime":1760413192101,"results":"18","hashOfConfig":"12"},{"size":3170,"mtime":1760361102327,"results":"19","hashOfConfig":"12"},{"size":584,"mtime":1760360541381,"results":"20","hashOfConfig":"12"},{"size":4381,"mtime":1760421455842,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"125b5e2",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\index.js",[],["47","48"],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\App.js",["49"],"import { BlocklyWorkspace } from \"react-blockly\"\nimport \"./App.css\";\nimport \"./blockly/customBlocks\";\nimport { useRef } from \"react\";\nimport { Scene } from \"./three/Scene\";\nimport RobotCommandGenerator from \"./blockly/robotCommandGenerator\";\nimport executeCommand from \"./interpreter/executeCommand\";\nimport { useCommandQueue } from \"./interpreter/useCommandQueue\";\n\nconst initialXml = '<xml></xml>';\nconst flyoutToolbox = {\nkind: \"flyoutToolbox\",\ncontents: [\n    {\n    kind: \"block\",\n    type: \"move_forward\",\n    },\n    {\n    kind: \"block\",\n    type: \"move_backward\",\n    },\n    {\n    kind: \"block\",\n    type: \"turn_right\",\n    },\n    {\n    kind: \"block\",\n    type: \"turn_left\",\n    },\n    {\n    kind: \"block\",\n    type: \"repeat_n_times\",\n    },\n    {\n    kind: \"block\",\n    type: \"if_then\",\n    }\n  ],\n};\n\nexport default function App() {\n  const workspaceRef = useRef(null);\n\n  const [state, api] = useCommandQueue(executeCommand);\n\n  function workspaceDidChange(workspace) {\n    workspaceRef.current = workspace;\n  }\n\n  return (\n    <div className=\"flex-row full-size\">\n      <div className=\"flex-1 flex-col\">\n      <BlocklyWorkspace\n          key=\"flyout-only\"\n          toolboxConfiguration={flyoutToolbox}\n          initialXml={initialXml}\n          className=\"fill-height blockly-workspace-container\"\n          workspaceConfiguration={{\n            grid: {\n              spacing: 20,\n              length: 3,\n              colour: \"#ccc\",\n              snap: true,\n            },\n            scrollbars: true,\n            toolbox: {\n              autoClose: false\n            }\n          }}\n          onWorkspaceChange={workspaceDidChange}\n        />\n        <div className=\"horizontal-controls\">\n          \n        </div>\n      </div>\n      <div className=\"scene-panel\">\n        <div className=\"scene-container\">\n          <Scene />\n        </div>\n        <button \n            className=\"executeButton\"\n            onClick={\n              () => {\n                const workspace = workspaceRef.current;\n                const code = RobotCommandGenerator.workspaceToCode(workspace);\n                const commands = code.split('\\n')\n                api.setQueue(commands);\n                api.start();\n              }\n          }>Execute</button>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\robotCommandGenerator.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\customBlocks.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\interpreter\\useCommandQueue.js",["50"],"import React from 'react';\r\nimport { agentControls } from '../state/agentContext'\r\n\r\nexport function useCommandQueue(executor) {\r\n  const [state, setState] = React.useState({\r\n    queue: [],\r\n    current: null,\r\n    status: \"idle\",\r\n    error: undefined,\r\n  });\r\n\r\n  const cancelCurrentRef = React.useRef(null);\r\n\r\n  const enqueue = React.useCallback((cmd) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      queue: [...prev.queue, cmd],\r\n    }));\r\n  }, []);\r\n\r\n  const setQueue = React.useCallback((cmds) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      queue: cmds\r\n    }));\r\n  }, []);\r\n\r\n  const start = React.useCallback(() => {\r\n    setState(prev => {\r\n      if (prev.status === \"running\") return prev;\r\n      return { ...prev, status: \"running\" };\r\n    });\r\n  }, []);\r\n\r\n  const pause = React.useCallback(() => {\r\n    if (cancelCurrentRef.current) {\r\n      cancelCurrentRef.current();\r\n    }\r\n    setState(prev => ({ ...prev, status: \"paused\" }));\r\n  }, []);\r\n\r\n  const resume = React.useCallback(() => {\r\n    setState(prev => {\r\n      if (prev.status === \"paused\") {\r\n        return { ...prev, status: \"running\" };\r\n      }\r\n      return prev;\r\n    });\r\n  }, []);\r\n\r\n  const stop = React.useCallback(() => {\r\n    if (cancelCurrentRef.current) {\r\n      cancelCurrentRef.current();\r\n    }\r\n    setState({\r\n      queue: [],\r\n      current: null,\r\n      status: \"idle\",\r\n      error: undefined,\r\n    });\r\n  }, []);\r\n\r\n  // Queue processing\r\n  React.useEffect(() => {\r\n    if (state.status !== \"running\") return;\r\n    if (state.current) return;\r\n    if (state.queue.length === 0) {\r\n      setState(prev => ({ ...prev, status: \"idle\" }));\r\n      return;\r\n    }\r\n\r\n    const [next, ...rest] = state.queue;\r\n    setState(prev => ({ ...prev, current: next, queue: rest }));\r\n\r\n    let canceled = false;\r\n    const cancelFunc = () => {\r\n      canceled = true;\r\n    };\r\n    cancelCurrentRef.current = cancelFunc;\r\n\r\n    executor(next, agentControls)\r\n      .then(() => {\r\n        if (canceled) return;\r\n        cancelCurrentRef.current = null;\r\n        setState(prev => ({ ...prev, current: null }));\r\n      })\r\n      .catch(err => {\r\n        if (canceled) return;\r\n        cancelCurrentRef.current = null;\r\n        setState(prev => ({ ...prev, status: \"error\", error: err }));\r\n      });\r\n  }, [state.status, state.queue, state.current, executor]);\r\n\r\n  return [state, { enqueue, setQueue, start, pause, resume, stop }];\r\n}\r\n","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\state\\agentContext.js",["51"],"import React, { createContext } from \"react\";\r\n\r\nexport const AgentContext = createContext(null);\r\n\r\nexport const agentControls = {\r\n  moveForward: () => {},\r\n  moveBackward: () => {},\r\n  turnLeft: () => {},\r\n  turnRight: () => {},\r\n  getPos: () => ({ x: 0, y: 0, direction: 0 })\r\n};\r\n","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\Scene.js",["52","53"],"import { Canvas } from '@react-three/fiber'\r\nimport React, { useState, useRef } from 'react'\r\nimport { AgentContext, agentControls } from '../state/agentContext'\r\nimport { useAgent } from './useAgent';\r\nimport { Map } from './Map'\r\n\r\n\r\nfunction Agent({ x, y, radius, direction }) {\r\n  // Направление: 0 - вверх, 1 - вправо, 2 - вниз, 3 - влево\r\n  // Поворот по z\r\n  const rotation = direction * (-Math.PI / 2) + Math.PI / 2;\r\n  return (\r\n    <mesh position={[x, y, 0.1]} rotation={[0, 0, rotation]}>\r\n      <circleGeometry args={[radius, 32]} />\r\n      <meshBasicMaterial color=\"red\" />\r\n      <mesh position={[radius * 0.8, 0, 0.02]}>\r\n        <circleGeometry args={[radius * 0.2, 16]} />\r\n        <meshBasicMaterial color=\"yellow\" />ы\r\n      </mesh>\r\n    </mesh>\r\n  )\r\n}\r\n\r\nexport function Scene() {\r\n  const mapWidth = 10;\r\n  const mapHeight = 6;\r\n  const agentRadius = 0.5;\r\n\r\n  const {\r\n    agentState,\r\n    agentControls: controlsFromHook\r\n  } = useAgent({ mapWidth, mapHeight, agentRadius });\r\n\r\n  // Прокидываем методы управления в глобальный объект\r\n  Object.assign(agentControls, controlsFromHook);\r\n\r\n  return (\r\n    <AgentContext.Provider value={{ agentState }}>\r\n      <Canvas orthographic camera={{ zoom: 50, position: [0, 0, 10] }}>\r\n        <Map width={mapWidth} height={mapHeight} />\r\n        <Agent x={agentState.x} y={agentState.y} radius={agentRadius} direction={agentState.direction} />\r\n      </Canvas>\r\n    </AgentContext.Provider>\r\n  )\r\n}\r\n","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\useAgent.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\interpreter\\executeCommand.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\three\\Map.js",["54","55","56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":44,"column":10,"nodeType":"64","messageId":"65","endLine":44,"endColumn":15},{"ruleId":"66","severity":1,"message":"67","line":92,"column":6,"nodeType":"68","endLine":92,"endColumn":58,"suggestions":"69"},{"ruleId":"62","severity":1,"message":"70","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"62","severity":1,"message":"71","line":2,"column":17,"nodeType":"64","messageId":"65","endLine":2,"endColumn":25},{"ruleId":"62","severity":1,"message":"72","line":2,"column":27,"nodeType":"64","messageId":"65","endLine":2,"endColumn":33},{"ruleId":"62","severity":1,"message":"73","line":9,"column":7,"nodeType":"64","messageId":"65","endLine":9,"endColumn":20},{"ruleId":"62","severity":1,"message":"74","line":32,"column":10,"nodeType":"64","messageId":"65","endLine":32,"endColumn":21},{"ruleId":"62","severity":1,"message":"75","line":57,"column":10,"nodeType":"64","messageId":"65","endLine":57,"endColumn":19},{"ruleId":"62","severity":1,"message":"76","line":128,"column":16,"nodeType":"64","messageId":"65","endLine":128,"endColumn":23},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. Mutable values like 'state.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["79"],"'React' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'MOVE_DURATION' is assigned a value but never used.","'worldToGrid' is defined but never used.","'canMoveTo' is defined but never used.","'setGrid' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [state.status, state.queue, executor, state]",{"range":"82","text":"83"},[2296,2348],"[state.status, state.queue, executor, state]"]