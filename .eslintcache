[{"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\index.js":"1","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\App.js":"2","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\3d\\Scene.js":"3","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\robotCommandGenerator.js":"4","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\executeCommands.js":"5","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\3d\\agentContext.js":"6","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\3d\\useAgent.js":"7","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\customBlocks.js":"8"},{"size":219,"mtime":1760344543637,"results":"9","hashOfConfig":"10"},{"size":4307,"mtime":1760344494211,"results":"11","hashOfConfig":"10"},{"size":1856,"mtime":1760344224710,"results":"12","hashOfConfig":"10"},{"size":2721,"mtime":1760344190872,"results":"13","hashOfConfig":"10"},{"size":995,"mtime":1760344186234,"results":"14","hashOfConfig":"10"},{"size":285,"mtime":1760344178107,"results":"15","hashOfConfig":"10"},{"size":3858,"mtime":1760338666036,"results":"16","hashOfConfig":"10"},{"size":3745,"mtime":1760344221404,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"125b5e2",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\index.js",[],["39","40"],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\App.js",["41"],"import \"./App.css\";\nimport \"./blockly/customBlocks\";\nimport { useState } from \"react\";\n\nimport { BlocklyWorkspace } from \"react-blockly\";\nimport { Scene } from \"./3d/Scene\";\nimport { agentControls } from \"./3d/agentContext\";\nimport RobotCommandGenerator from \"./blockly/robotCommandGenerator\";\nimport executeCommands from \"./blockly/executeCommands\";\n\nexport default function App() {\n  const [xml, setXml] = useState(\"\");\n  const [commands, setCommands] = useState(\"\");\n\n  const initialXml = '<xml></xml>';\n  // const toolboxCategories = {\n  //   kind: \"categoryToolbox\",\n  //   contents: [\n  //     {\n  //       kind: \"category\",\n  //       name: \"Move\",\n  //       colour: \"#5C81A6\",\n  //       contents: [\n  //         {\n  //           kind: \"block\",\n  //           type: \"move_up\",\n  //         },\n  //         {\n  //           kind: \"block\",\n  //           type: \"move_right\",\n  //         },\n  //         {\n  //           kind: \"block\",\n  //           type: \"move_down\",\n  //         },\n  //         {\n  //           kind: \"block\",\n  //           type: \"move_left\",\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       kind: \"category\",\n  //       name: \"Loops\",\n  //       colour: \"#A65C81\",\n  //       contents: [\n  //         {\n  //           kind: \"block\",\n  //           type: \"repeat_n_times\",\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       kind: \"category\",\n  //       name: \"Logic\",\n  //       colour: \"#A6A65C\",\n  //       contents: [\n  //         {\n  //           kind: \"block\",\n  //           type: \"if_then\",\n  //         },\n  //         {\n  //           kind: \"block\",\n  //           type: \"random_number_1_10\",\n  //         },\n  //         {\n  //           kind: \"block\",\n  //           type: \"math_compare\",\n  //         },\n  //         {\n  //           kind: \"block\",\n  //           type: \"number_input\",\n  //         },\n  //       ],\n  //     },\n  //     {\n  //       kind: \"category\",\n  //       name: \"Rotate\",\n  //       colour: \"#5CA65C\",\n  //       contents: [\n  //         {\n  //           kind: \"block\",\n  //           type: \"rotate_clockwise\",\n  //         },\n  //         {\n  //           kind: \"block\",\n  //           type: \"rotate_counterclockwise\",\n  //         },\n  //       ],\n  //     },\n  //   ],\n  // };\n  const flyoutToolbox = {\n    kind: \"flyoutToolbox\",\n    contents: [\n      {\n        kind: \"block\",\n        type: \"move_forward\",\n      },\n      {\n        kind: \"block\",\n        type: \"move_backward\",\n      },\n      {\n        kind: \"block\",\n        type: \"turn_right\",\n      },\n      {\n        kind: \"block\",\n        type: \"turn_left\",\n      },\n      {\n        kind: \"block\",\n        type: \"repeat_n_times\",\n      },\n      {\n        kind: \"block\",\n        type: \"if_then\",\n      },\n      {\n        kind: \"block\",\n        type: \"random_number_1_10\",\n      },\n      {\n        kind: \"block\",\n        type: \"math_compare\",\n      },\n      {\n        kind: \"block\",\n        type: \"number_input\",\n      },\n    ],\n  };\n  function workspaceDidChange(workspace) {\n    // Используем наш генератор\n    const code = RobotCommandGenerator.workspaceToCode(workspace);\n    setCommands(code);\n  }\n\n  return (\n    <div className=\"flex-row full-size\">\n      <div className=\"flex-1 flex-col\">\n        <BlocklyWorkspace\n          key=\"flyout-only\"\n          toolboxConfiguration={flyoutToolbox}\n          initialXml={initialXml}\n          className=\"fill-height blockly-workspace-container\"\n          workspaceConfiguration={{\n            grid: {\n              spacing: 20,\n              length: 3,\n              colour: \"#ccc\",\n              snap: true,\n            },\n            scrollbars: true,\n            toolbox: {\n              autoClose: false\n            }\n          }}\n          onWorkspaceChange={workspaceDidChange}\n          onXmlChange={setXml}\n        />\n        <div className=\"horizontal-controls\">\n          <textarea\n            id=\"code\"\n            className=\"code-textarea\"\n            value={commands}\n            readOnly\n          ></textarea>\n          <button onClick={() => executeCommands(commands, agentControls)}>Execute</button>\n        </div>\n      </div>\n      <div className=\"scene-panel\">\n        <div className=\"scene-container\">\n          <Scene />\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\3d\\Scene.js",["42","43"],"import { Canvas } from '@react-three/fiber'\r\nimport React, { useState, useRef } from 'react'\r\nimport { AgentContext, agentControls } from './agentContext'\r\nimport { useAgent } from './useAgent';\r\n\r\nfunction Map({ width, height }) {\r\n  return (\r\n    <mesh position={[0, 0, 0]}>\r\n      <planeGeometry args={[width, height]} />\r\n      <meshBasicMaterial color=\"green\" />\r\n    </mesh>\r\n  )\r\n}\r\n\r\nfunction Agent({ x, y, radius, direction }) {\r\n  // Направление: 0 - вверх, 1 - вправо, 2 - вниз, 3 - влево\r\n  // Поворот по z\r\n  const rotation = direction * (-Math.PI / 2) + Math.PI / 2;\r\n  return (\r\n    <mesh position={[x, y, 0.1]} rotation={[0, 0, rotation]}>\r\n      <circleGeometry args={[radius, 32]} />\r\n      <meshBasicMaterial color=\"red\" />\r\n      {/* Добавим \"нос\" агента */}\r\n      <mesh position={[radius * 0.8, 0, 0.02]}>\r\n        <circleGeometry args={[radius * 0.2, 16]} />\r\n        <meshBasicMaterial color=\"yellow\" />ы\r\n      </mesh>\r\n    </mesh>\r\n  )\r\n}\r\n\r\nexport function Scene() {\r\n  const mapWidth = 10;\r\n  const mapHeight = 6;\r\n  const agentRadius = 0.5;\r\n\r\n  // Используем кастомный хук useAgent вместо своей логики\r\n  const {\r\n    agentState,\r\n    agentControls: controlsFromHook\r\n  } = useAgent({ mapWidth, mapHeight, agentRadius });\r\n\r\n  // Прокидываем методы управления в глобальный объект\r\n  Object.assign(agentControls, controlsFromHook);\r\n\r\n  return (\r\n    <AgentContext.Provider value={{ agentState }}>\r\n      <Canvas orthographic camera={{ zoom: 50, position: [0, 0, 10] }}>\r\n        <Map width={mapWidth} height={mapHeight} />\r\n        <Agent x={agentState.x} y={agentState.y} radius={agentRadius} direction={agentState.direction} />\r\n      </Canvas>\r\n    </AgentContext.Provider>\r\n  )\r\n}\r\n","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\robotCommandGenerator.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\executeCommands.js",[],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\3d\\agentContext.js",["44"],"import React, { createContext } from \"react\";\r\n\r\nexport const AgentContext = createContext(null);\r\n\r\nexport const agentControls = {\r\n  moveForward: () => {},\r\n  moveBackward: () => {},\r\n  turnLeft: () => {},\r\n  turnRight: () => {},\r\n  getPos: () => ({ x: 0, y: 0, direction: 0 })\r\n};\r\n","C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\3d\\useAgent.js",[],["45","46"],"C:\\Users\\abdulb\\source\\repos\\Effective\\Yandex\\reactblockly-customblocks\\src\\blockly\\customBlocks.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":12,"column":10,"nodeType":"53","messageId":"54","endLine":12,"endColumn":13},{"ruleId":"51","severity":1,"message":"55","line":2,"column":17,"nodeType":"53","messageId":"54","endLine":2,"endColumn":25},{"ruleId":"51","severity":1,"message":"56","line":2,"column":27,"nodeType":"53","messageId":"54","endLine":2,"endColumn":33},{"ruleId":"51","severity":1,"message":"57","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":13},{"ruleId":"47","replacedBy":"58"},{"ruleId":"49","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'xml' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useRef' is defined but never used.","'React' is defined but never used.",["60"],["61"],"no-global-assign","no-unsafe-negation"]